## 我的目的
* 只修改store中的一部分信息 更新修改部分的展示
* 很容易很合理的控制对象

```javascript

let store = {
    game: {
        fish_list: [
            {
                fish_id: ...
                pos
            }
        ]
    }
}

```

fish_list addFish 在鱼群中添加一条鱼
> fish
>> pos:> 鱼的位置
>> status:> 鱼的状态 死亡 ...


* @ques 我的的game中子弹要便利所有的鱼 进行碰撞检测 这能实现吗
> 我要能找到所有的子弹 同时所有的鱼 state 必须和model一一绑定
> 这样是不是有点恶心, 同样一个东西的属性和方法我还要分开来做 这不是发神经吗
> ....
> 或者我可以直接从我的model中抽离一个state, 同时model的改变是可追踪的
> 这也许就像一个state树一级一级的绑定, 任意节点的修改我都可以追踪记录..
> 这应该是我想要的东西


## import node 模块最后怎么打包到项目里面去了
import { createStore } from 'redux';
redux是node模块 怎么最后打包的一个js中



## 2017-07-28 09:06:06
* 能不能将改写redux的reducer可以在任意时候添加新的action处理只要最终返回state就可以了
reducer 只改变其中的一小部分, 任意时候添加任意地址的改变
store.addReducer(obj, objReducer...);
或者我参照redux的代码自己写一个redux 状态机...
先兼容redux的代码一步步的改写里面的内容,

select filter state里面的数据也是非常好的功能


* 如果我有一个state: {
    a: {}
}
我在a下面添加一个b, 这时候新建一个reducer改变b, 再新建一个connect监听b的改变而改变...
我的鱼最好是一个数组..., 感觉这并不是我想要的



## 2017-07-27 09:26:50
* @ques transform-es2015-modules-commonjs 这是做什么的
* react-redux

* 这一大套逻辑实在是太恶心了
> 一大串 一大串 代码 搞到最后我都不知道在干什么
> 太多的内部逻辑....
> 这也许就是js写大型项目的效果

* @ques redux rxjs 能够混合使用吗


## 2017-07-26 09:40:10
* redux的好处显而易见
> 一个独立的数据存储地
> 所有数据的变化一目了然
> 可以方便的回退前进
> 高度抽象

* redux的坏处也一样显而易见
> 引人复杂的redux逻辑
> 对数据的修改不方便, 同时数据改变之后修改ui也很不方便

* 有没有什么方法可以吸收他的好处 同时避免他的坏处

* 当我的model改变时, ...

* 当我有多个model时如何处理
> 显然我的扑克牌赛和普通的赛里面大部分是可以公用的 但是有些不一样的地方
> 我可以再用原来的model组织一个新的model树
---------
> 我的model和ctrl是一一对应的关系, 如果有一个model对应多个ctrl如何处理
> 而且他们分别在页面的不同地方 model应该是唯一的...


## 2017-07-25 09:44:04
connect 的作用是什么, 每次store更改都会触发
在store中筛选出能用的信息传给 展示信息的部分 是不是将属性


## 2017-07-25 09:41:44
张俊清的项目代码 luckydragon_dev



## 2017/07/24 09:43
redux
default connect(select)(App)
这个是做什么的, 看源代码
