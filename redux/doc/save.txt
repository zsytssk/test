* 目标
> 任意格式的数据
> 最简单有效的修改，每一个修改直接触发ui改变 没有额外的计算
> 可以对一个值监听多次
一个数据发生变化多个ui发生改变

* redux 能不能每一个对象的变化直接触发相应的改变
比方有一个数据结构是
let a = {
  b: [{id: 1, value: 1}, {id: 2， value: 2}]
}
a.b.arr:id=1表示a的属性b数组中id=1的元素
-| 当它add的时候我页面直接绑定他
-| 当他修改的时候我相应做出修改，
-| 当他销毁的时候 销毁相应的页面 同时绑定

* @ques 以什么样的格式去通知修改
> 如果我有一个大对象， 里面其中的一个属性发生变化
a.b.arr:id: {
  keyname: 'val',
  type: 'key_change',
  new_val: 1,
  old_val: 2,
}
> 当我有一个数组添加一个元素
a.b {
  map: 'a.b.arr:id=xx'
  type: 'add_item',
  new_val: {id: xx, val: xx},
}
在a.b的绑定事件中处理添加元素的ui添加，同时在新的ui中添加对a.b.arr:id=xx的绑定
> 销毁
a.b.arr:id=xx {
  type: 'destroy'
}


* 难点
> state发生修改， 我如何知道哪一个发生变化
> 如何告知修改， 如何绑定 如何取消绑定
> 数据相应的动画如何去处理
比方说出牌的动画

* map很好解决， 关键是数组如何去处理

* note
> 绑定事件应该是递归的形式处理，如果我a.b 销毁 a.b 下面的所有绑定都要取消

