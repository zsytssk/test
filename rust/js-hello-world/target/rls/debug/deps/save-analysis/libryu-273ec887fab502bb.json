{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54],"program":"C:\\Users\\zhangshiyang\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ryu","C:\\Users\\zhangshiyang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.6\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,link","-C","debuginfo=2","-C","metadata=273ec887fab502bb","-C","extra-filename=-273ec887fab502bb","--out-dir","d:\\zsytssk\\github\\test\\rust\\js-hello-world\\target\\rls\\debug\\deps","-L","dependency=d:\\zsytssk\\github\\test\\rust\\js-hello-world\\target\\rls\\debug\\deps","--cap-lints","allow","--cfg","integer128","--cfg","must_use_return","--error-format=json","--sysroot","C:\\Users\\zhangshiyang\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":[100,58,92,122,115,121,116,115,115,107,92,103,105,116,104,117,98,92,116,101,115,116,92,114,117,115,116,92,106,115,45,104,101,108,108,111,45,119,111,114,108,100,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,114,121,117,45,50,55,51,101,99,56,56,55,102,97,98,53,48,50,98,98,46,114,108,105,98]},"prelude":{"crate_id":{"name":"ryu","disambiguator":[5139863932899720493,15581638990975449177]},"crate_root":"C:\\Users\\zhangshiyang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.6\\src","external_crates":[{"file_name":"C:\\Users\\zhangshiyang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.6\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[7979748695531658058,9944250247672934792]}},{"file_name":"C:\\Users\\zhangshiyang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.6\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[282237865573621751,6078668104684972773]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":1948,"line_start":1,"line_end":66,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1768,"byte_end":1774,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1776,"byte_end":1781,"line_start":60,"line_end":60,"column_start":26,"column_end":31},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":102},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1898,"byte_end":1912,"line_start":64,"line_end":64,"column_start":18,"column_end":32},"alias_span":null,"name":"d2s_buffered_n","value":"","parent":{"krate":0,"index":220}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1931,"byte_end":1945,"line_start":65,"line_end":65,"column_start":18,"column_end":32},"alias_span":null,"name":"f2s_buffered_n","value":"","parent":{"krate":0,"index":220}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":1948,"line_start":1,"line_end":66,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\zhangshiyang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":48},{"krate":0,"index":60},{"krate":0,"index":104},{"krate":0,"index":110},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":170},{"krate":0,"index":214},{"krate":0,"index":220}],"decl_id":null,"docs":" Pure Rust implementation of RyÅ«, an algorithm to quickly convert floating\n point numbers to decimal strings.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1234,"byte_end":1244,"line_start":32,"line_end":32,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":2299,"byte_end":2305,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" Safe API for formatting floating point numbers to text.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":2288,"byte_end":2330,"line_start":18,"line_end":20,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":2524,"byte_end":2527,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":2455,"byte_end":2464,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":3523,"byte_end":3529,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"fn <F> (&mut self, f: F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":3454,"byte_end":3463,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4176,"byte_end":4181,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Float","qualname":"::buffer::Float","value":"Float: Sealed","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" A floating point number, f32 or f64, that can be written into a\n [`ryu::Buffer`][Buffer].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4248,"byte_end":4267,"line_start":76,"line_end":76,"column_start":15,"column_end":34},"name":"write_to_ryu_buffer","qualname":"::buffer::Float::write_to_ryu_buffer","value":"fn (self, result: *mut u8) -> usize","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4724,"byte_end":4730,"line_start":95,"line_end":95,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::buffer::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,100,50,115,46,114,115],"byte_start":25813,"byte_end":25827,"line_start":563,"line_end":563,"column_start":15,"column_end":29},"name":"d2s_buffered_n","qualname":"::d2s::d2s_buffered_n","value":"fn (f: f64, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,100,50,115,46,114,115],"byte_start":25744,"byte_end":25753,"line_start":561,"line_end":561,"column_start":29,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,102,50,115,46,114,115],"byte_start":74689,"byte_end":74703,"line_start":475,"line_end":475,"column_start":15,"column_end":29},"name":"f2s_buffered_n","qualname":"::f2s::f2s_buffered_n","value":"fn (f: f32, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,102,50,115,46,114,115],"byte_start":74620,"byte_end":74629,"line_start":473,"line_end":473,"column_start":29,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":220},"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1875,"byte_end":1878,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"C:\\Users\\zhangshiyang\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224}],"decl_id":null,"docs":" Unsafe functions that exactly mirror the API of the C implementation of RyÅ«.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":2337,"byte_end":2343,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":3843,"byte_end":3849,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":2337,"byte_end":2343,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":3843,"byte_end":3849,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":226},"to":{"krate":1,"index":2560}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,122,104,97,110,103,115,104,105,121,97,110,103,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,121,117,45,48,46,50,46,54,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4183,"byte_end":4189,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":30}}]}